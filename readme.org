#+title: Portal
Portable websockets for Common Lisp using [[https://github.com/usocket/usocket][usocket]].

* Install
1. Download to =quicklisp/local-projects=.
2. ~(ql:quickload 'portal)~

*  Use

** Define a Resource
Resources are identified by their path in the URL.

A simple echo server.
#+BEGIN_SRC lisp
  (pws:define-path-handler "/echo"
    :connect (lambda (websocket)
               (pws:send websocket "Welcome to echo server."))
    :message (lambda (websocket message)
               (pws:send websocket message)))
#+END_SRC
You can also define ~:disconnect~ function and a ~:error~ function in case something goes wrong in your other functions. You can't send any more messages after a disconnect has begun.

** Start a Server
#+BEGIN_SRC lisp
  (defparameter server
    (pws:websocket-server 4433))
#+END_SRC

Now connect to =ws://localhost:4433/echo= in a websocket tester and start echoing.
You can add a ~:multi-thread~ argument to give each client it's own thread.

** Disconnect Clients
At any point, you can close a client websocket.
#+BEGIN_SRC lisp
  (pws:close websocket)
#+END_SRC

** Close Server
To stop severing:
#+BEGIN_SRC lisp
  (pws:websocket-server-close server)
#+END_SRC

It is just a thread!

** Handling Errors
These two methods are separate, You can both, neither, or any combination.

*** Custom Handler Function
When defining a resource path, you can pass a ~:error~ argument with a function that takes the websocket and the condition that occurred. Do whatever you want here. It is called when there is an error in your ~:connect~, ~:message, or ~:disconnect~ function.

*** Debugger
There is a variable: ~pws:*debug-on-error*~; when it is non-nil, the debugger will be entered when there is a problem with one of your handler functions.
it is bound to ~t~ by default.

* Issues
If you find any bugs of have any issues (installing, using, questions, adhering to RFC 6455) use the Github issue tracker.

* Contact
If you want to contact me about collaboration, licensing, etc. You can use the email in =portal.asd=.
